<UserControl x:Class="SugarDesk.Rest.Views.RestView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:st="clr-namespace:AutoGrid;assembly=SpicyTaco.AutoGrid"
             xmlns:converters="clr-namespace:SugarDesk.Core.Infrastructure.Converters;assembly=SugarDesk.Core"
             xmlns:mui="clr-namespace:FirstFloor.ModernUI.Windows.Controls;assembly=FirstFloor.ModernUI"
             xmlns:prism="clr-namespace:Prism.Mvvm;assembly=Prism.Wpf"
             prism:ViewModelLocator.AutoWireViewModel="True"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    
    
    <UserControl.Resources>
        <converters:EnumMatchToBooleanConverter x:Key="EnumConverter" />
        <converters:EnumToGridRowHeightConverter x:Key="EnumGridConverter" />
        <converters:BoolToVisibilityConverter x:Key="VisibilityConverter"/>

        <Style TargetType="{x:Type Label}">
            <Setter Property="HorizontalContentAlignment"  Value="Right"/>
            <Setter Property="FontStyle"  Value="Italic"/>
            <Setter Property="Foreground" Value="{DynamicResource Accent}" />
            <Setter Property="Width" Value="100" />
        </Style>
        <Style x:Key="AddToItemStyle"
           BasedOn="{StaticResource BaseButtonStyle}"
           TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{DynamicResource Accent}" />
            <Setter Property="FontStyle"  Value="Italic"/>
            <Setter Property="Width"  Value="Auto"/>
            <Setter Property="Padding"  Value="4,0,4,0"/>
            <Setter Property="Height"  Value="24"/>
            <Setter Property="HorizontalContentAlignment"  Value="Center"/>
            <Setter Property="VerticalContentAlignment"  Value="Center"/>
            <Setter Property="Content"  Value="Add"/>
        </Style>

        <Style x:Key="{x:Type Button}"
           BasedOn="{StaticResource BaseButtonStyle}"
           TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{DynamicResource Accent}" />
            <Setter Property="FontWeight" Value="ExtraBold" />
        </Style>

        <Style x:Key="CancelButton"
           BasedOn="{StaticResource BaseButtonStyle}"
           TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="DarkRed" />
        </Style>

        <Style x:Key="{x:Type CheckBox}" TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
            <Setter Property="Foreground" Value="{DynamicResource Accent}" />
        </Style>
    </UserControl.Resources>

    <Grid Margin="20">
        <st:AutoGrid Rows="Auto, Auto,Auto,30,*,Auto,30,30" Columns="Auto,800" ChildMargin="3">
            <!-- File info list-->
            <Label Content="Options:"/>
            <ComboBox IsEditable="False" ItemsSource="{Binding Path=OptionsItems}" DisplayMemberPath="Content" SelectedIndex="{Binding Path=SelectedIndexOptions}" SelectedItem="{Binding Path=SelectedOptionsItem}" Width="250" HorizontalAlignment="Left">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding Mode=OneWay, Path=OptionsSelectionChangedCommand}"  />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>

            <!-- Base Url-->
            <Label Content="Base Url:"/>
            <st:AutoGrid Rows="Auto" Columns="*,Auto,Auto,10,140">
                <ComboBox ItemsSource="{Binding Path=BaseUrlItems}"  DisplayMemberPath="Content" SelectedIndex="{Binding Path=SelectedIndexBaseUrl}" SelectedItem="{Binding Path=BaseUrlItemSelected}" >
                </ComboBox>
                <Button Content="Del" ToolTip="Delete base url" Command="{Binding Path=DeleteBaseUrlCommand}" HorizontalAlignment="Right" VerticalContentAlignment="Center"/>
                <Button Content="Add" ToolTip="Add base url" Command="{Binding Path=AddBaseUrlCommand}" HorizontalAlignment="Right" VerticalContentAlignment="Center"/>
                <Label />
                <ComboBox ItemsSource="{Binding Path=ListItems}" SelectedIndex="{Binding Path=SelectedIndexList}" SelectedItem="{Binding Path=ListItemSelected}" >
                </ComboBox>
            </st:AutoGrid>

            <Label Content="Credentials:"/>
            <st:AutoGrid Rows="Auto" Columns="*,*,*,Auto,Auto">
                <ComboBox ItemsSource="{Binding Path=AccountItems}"  DisplayMemberPath="AccountNumber" SelectedIndex="{Binding Path=SelectedIndexAccount}" SelectedItem="{Binding Path=AccountItemSelected}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding Mode=OneWay, Path=AccountSelectionChangedCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
                <TextBox Text="{Binding Path=Username,  Mode=TwoWay}"/>
                <TextBox Text="{Binding Path=Password,  Mode=TwoWay}"/>
                <Button Content="Del" ToolTip="Delete account" Command="{Binding Path=DeleteAccountCommand}" HorizontalAlignment="Right" VerticalContentAlignment="Center"/>
                <Button Content="Add" ToolTip="Add account" Command="{Binding Path=AddAccountCommand}" HorizontalAlignment="Right" VerticalContentAlignment="Center"/>
            </st:AutoGrid>


            <Label />
            <st:AutoGrid Rows="*Auto" Columns="*,Auto">
                <st:AutoGrid Rows="Auto" Columns="*,30" Visibility="{Binding Path=ShowGetListProgress, Converter={StaticResource VisibilityConverter}}" ChildHorizontalAlignment="Center" >
                    <ProgressBar IsIndeterminate="True"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Center"
                                        HorizontalContentAlignment="Center"
                                        Height="30" />
                    <Label />
                </st:AutoGrid>
                <Button Content="Get List"  Command="{Binding Path=GetListCommand}"  HorizontalAlignment="Right"  MinWidth="50" VerticalContentAlignment="Center"/>
            </st:AutoGrid>


            <st:AutoGrid Rows="Auto,Auto,Auto,Auto" Columns="Auto" ChildMargin="3">
                <Label Content="File info list:"/>
                <RadioButton Content="RowOne" IsChecked="{Binding Path=DisplayOption, Mode=TwoWay, Converter={StaticResource EnumConverter}, ConverterParameter=RowOne}" />
                <RadioButton Content="RowTwo" IsChecked="{Binding Path=DisplayOption, Mode=TwoWay, Converter={StaticResource EnumConverter}, ConverterParameter=RowTwo}" />
                <RadioButton Content="RowThree"  IsChecked="{Binding Path=DisplayOption, Mode=TwoWay, Converter={StaticResource EnumConverter}, ConverterParameter=RowThree}" />
            </st:AutoGrid>

            <Border BorderBrush="{DynamicResource ButtonBorder}" BorderThickness="1">
                <ScrollViewer>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition>
                                <RowDefinition.Height>
                                    <MultiBinding Converter="{StaticResource EnumGridConverter}">
                                        <Binding  Path="GridRowType" />
                                        <Binding  Source="{x:Static converters:GridRowType.RowOne}" />
                                    </MultiBinding>
                                </RowDefinition.Height>
                            </RowDefinition>
                            <RowDefinition>
                                <RowDefinition.Height>
                                    <MultiBinding Converter="{StaticResource EnumGridConverter}">
                                        <Binding  Path="GridRowType" />
                                        <Binding  Source="{x:Static converters:GridRowType.RowTwo}" />
                                    </MultiBinding>
                                </RowDefinition.Height>
                            </RowDefinition>
                            <RowDefinition>
                                <RowDefinition.Height>
                                    <MultiBinding Converter="{StaticResource EnumGridConverter}">
                                        <Binding  Path="GridRowType" />
                                        <Binding  Source="{x:Static converters:GridRowType.RowThree}" />
                                    </MultiBinding>
                                </RowDefinition.Height>
                            </RowDefinition>
                        </Grid.RowDefinitions>

                        <!--  Switchable - List view -->
                        <Grid Grid.Row="0">
                            <DataGrid x:Name="FileInfoListDataGrid"
                            RenderOptions.ClearTypeHint="Enabled"
                            TextOptions.TextFormattingMode="Display"
                            GridLinesVisibility="Horizontal"
                            Margin="5"
                            SelectionUnit="FullRow"
                            CanUserAddRows="false"
                            AutoGenerateColumns="False"
                            ItemsSource="{Binding Path=FileInfoCollection}"
                            SelectedItem="{Binding Path=SelectedFileInfoItem}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="SelectionChanged">
                                        <i:InvokeCommandAction  Command="{Binding Mode=OneWay, Path=FileInfoSelectionChangedCommand}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <DataGrid.Resources>
                                    <converters:BindingProxy x:Key="Proxy" Data="{Binding}" />
                                </DataGrid.Resources>
                                <DataGrid.Columns>
                                    <DataGridCheckBoxColumn Header=""
                                                Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=IsSelected, Mode=OneWay}" />
                                    <DataGridTextColumn  Header="Filename"
                                            Binding="{Binding Filename}" MinWidth="120" Width="*" />
                                    <DataGridTextColumn Header="File Type" Foreground="DodgerBlue"
                                            Binding="{Binding FileType}" Width="*" />
                                    <DataGridTextColumn Header="Type"
                                            Binding="{Binding Type}" Width="*" />
                                    <DataGridTextColumn Header="Created"
                                            Binding="{Binding CreationTime}" Width="*" />
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>
                        <!-- End:  Switchable - List view -->

                        <!--  Switchable - Json view -->
                        <Grid Grid.Row="1">
                            <TextBlock Text="{Binding FileInfoJson}" />
                        </Grid>
                        <!-- End:  Switchable - Json view -->

                        <!--  Switchable - Xml view -->
                        <Grid Grid.Row="2">
                            <TextBlock Text="{Binding FileInfoXml}" />
                        </Grid>
                        <!-- End:  Switchable - Xml view -->

                    </Grid>
                </ScrollViewer>
            </Border>

            <Label Content="Folder:"/>
            <st:AutoGrid Rows="Auto" Columns="3*,Auto,4,Auto,2*">
                <ComboBox IsEditable="False" ItemsSource="{Binding Path=FolderItems}" SelectedIndex="{Binding Path=SelectedIndexFolder}" SelectedItem="{Binding Path=SelectedFolderItem}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction  Command="{Binding Mode=OneWay, Path=FolderSelectionChangedCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
                <Button Content="Add"  Command="{Binding Path=AddFolderCommand}"  VerticalContentAlignment="Center"/>
                <Label />
                <Label Content="Filename:"/>
                <TextBox Text="{Binding Path=VoyagerFilename,  Mode=TwoWay}"/>
            </st:AutoGrid>

            <Label />
            <st:AutoGrid Rows="*Auto" Columns="*,Auto">
                <st:AutoGrid Rows="Auto" Columns="*,30" Visibility="{Binding Path=ShowGetFileProgress, Converter={StaticResource VisibilityConverter}}" ChildHorizontalAlignment="Center" >
                    <ProgressBar IsIndeterminate="True"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Center"
                                        HorizontalContentAlignment="Center"
                                        Height="30" />
                    <Label />
                </st:AutoGrid>
                <Button Content="Get File"  Command="{Binding Path=GetFileCommand}"  HorizontalAlignment="Right"  MinWidth="50" VerticalContentAlignment="Center"/>
            </st:AutoGrid>

            <mui:BBCodeBlock LinkNavigator="{Binding Path=LinkNavigator}" BBCode="{Binding Path=MoreLogsBbCode}" HorizontalAlignment="Center" />
            <TextBlock Text="{Binding Path=Status,  Mode=OneWay}" Foreground="{Binding Path=StatusForeground}" FontSize="12" FontWeight="Thin"  />
        </st:AutoGrid>

    </Grid>
</UserControl>
